"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Game_1 = require("./Game");
/**
 * Class to create and manage entity models.
 */
class Model {
    /**
     * Creates a model object based on the hash key or model string.
     *
     * @param hash A number or string of the model's hash. Example: "mp_m_freemode_01"
     */
    constructor(hash) {
        if (typeof hash === 'string') {
            this.hash = Game_1.Game.generateHash(hash);
        }
        else {
            this.hash = hash;
        }
    }
    /**
     * Gets the hash of the model.
     *
     * @returns The hash key.
     */
    get Hash() {
        return this.hash;
    }
    /**
     * Gets if the model is a Ped or not.
     *
     * @returns Whether this model is a Ped.
     */
    get IsPed() {
        return !!IsModelAPed(this.hash);
    }
    /**
     * Gets if the model is a Vehicle or not.
     *
     * @returns Whether this model is a Vehicle.
     */
    get IsVehicle() {
        return !!IsModelAVehicle(this.hash);
    }
    /**
     * Gets if the model is loaded or not.
     *
     * @returns Whether this model is loaded.
     */
    get IsLoaded() {
        return !!HasModelLoaded(this.hash);
    }
    /**
     * Request and load the model with a specified timeout. Advised timeout - 1000.
     *
     * @param timeout Maximum allowed time for model to load.
     */
    request(timeout) {
        return new Promise((resolve) => {
            if (!IsModelInCdimage(this.hash) && !IsModelValid(this.hash) && !IsWeaponValid(this.hash)) {
                resolve(false);
            }
            RequestModel(this.hash);
            const start = GetGameTimer();
            const interval = setInterval(() => {
                if (this.IsLoaded || GetGameTimer() - start >= timeout) {
                    clearInterval(interval);
                    this.markAsNoLongerNeeded();
                    resolve(this.IsLoaded);
                }
                // tslint:disable-next-line: align
            }, 0);
        });
    }
    /**
     * Sets the model as no longer needed allowing the game engine to free memory.
     */
    markAsNoLongerNeeded() {
        SetModelAsNoLongerNeeded(this.hash);
    }
}
exports.Model = Model;
